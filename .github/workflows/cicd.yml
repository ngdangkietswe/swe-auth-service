name: Golang CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: 01092002/swe-auth-service

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Extract Branch Name
        id: extract_branch
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Git Commit Data
        id: git_commit_data
        uses: rlespinasse/git-commit-data-action@v1.5.0

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Confirm Docker Login
        run: echo "âœ… Successfully logged in to Docker Hub."

      - name: Build Docker Image
        run: |
          set -e  # Exit on any error
          echo "ðŸš€ Starting Docker image build..."

          # Extract details for tagging
          TIMESTAMP=$(TZ=Asia/Ho_Chi_Minh date +"%Y%m%d%H%M%S")
          BRANCH_NAME=${{ steps.extract_branch.outputs.branch }}
          COMMIT_SHA=${{ steps.git_commit_data.outputs.short_sha }}
          IMAGE_TAG="$BRANCH_NAME-$COMMIT_SHA-$TIMESTAMP"

          echo "ðŸ”– Tagging Docker image as $IMAGE_TAG..."
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          # Build the Docker image
          docker build -t $IMAGE_NAME:$IMAGE_TAG -t $IMAGE_NAME:latest .

      - name: Confirm Docker Build
        run: |
          echo "âœ… Docker image built successfully with tags: ${{ env.IMAGE_TAG }} and latest."

      - name: Push Docker Image
        run: |
          set -e  # Exit on any error
          echo "ðŸ“¤ Pushing Docker images to Docker Hub..."

          # Push both tags
          docker push $IMAGE_NAME:${{ env.IMAGE_TAG }}
          docker push $IMAGE_NAME:latest

          echo "âœ… Docker images pushed successfully: $IMAGE_NAME:${{ env.IMAGE_TAG }} and $IMAGE_NAME:latest."

  modify-k8s:
    name: Modify Kubernetes Deployment
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          repository: 'ngdangkietswe/swe-infrastructure'
          token: ${{ secrets.PAT }}

      - name: Modify Image Tag
        id: modify_image_tag
        run: |
          set -e  # Exit on any error
          echo "ðŸ”§ Modifying Kubernetes deployment files..."
          
          git config --global user.name "ngdangkietse"
          git config --global user.email "kietnguyen17052001@gmail.com"          

          # Extract the image tag
          IMAGE_TAG=$(echo ${{ needs.build-and-push.outputs.IMAGE_TAG }} | cut -d'-' -f 1)

          # Modify the deployment files
          sed -i "s|image: 01092002/swe-auth-service:.*|image: 01092002/swe-auth-service:$IMAGE_TAG|" k8s/swe-auth-service/deployment.yml
          
          git add .
          git commit -m "chore: update image tag in deployment files"
          git push origin main
          
          echo "âœ… Kubernetes deployment files updated successfully."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}