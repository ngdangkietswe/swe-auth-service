// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ActionColumns holds the columns for the "action" table.
	ActionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// ActionTable holds the schema information for the "action" table.
	ActionTable = &schema.Table{
		Name:       "action",
		Columns:    ActionColumns,
		PrimaryKey: []*schema.Column{ActionColumns[0]},
	}
	// PermissionColumns holds the columns for the "permission" table.
	PermissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "action_id", Type: field.TypeUUID},
		{Name: "resource_id", Type: field.TypeUUID},
	}
	// PermissionTable holds the schema information for the "permission" table.
	PermissionTable = &schema.Table{
		Name:       "permission",
		Columns:    PermissionColumns,
		PrimaryKey: []*schema.Column{PermissionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "permission_action_permissions",
				Columns:    []*schema.Column{PermissionColumns[2]},
				RefColumns: []*schema.Column{ActionColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "permission_resource_permissions",
				Columns:    []*schema.Column{PermissionColumns[3]},
				RefColumns: []*schema.Column{ResourceColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResourceColumns holds the columns for the "resource" table.
	ResourceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// ResourceTable holds the schema information for the "resource" table.
	ResourceTable = &schema.Table{
		Name:       "resource",
		Columns:    ResourceColumns,
		PrimaryKey: []*schema.Column{ResourceColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "username", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "enable_2fa", Type: field.TypeBool, Default: false},
		{Name: "secret_2fa", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UsersPermissionColumns holds the columns for the "users_permission" table.
	UsersPermissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "permission_id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// UsersPermissionTable holds the schema information for the "users_permission" table.
	UsersPermissionTable = &schema.Table{
		Name:       "users_permission",
		Columns:    UsersPermissionColumns,
		PrimaryKey: []*schema.Column{UsersPermissionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_permission_permission_users_permissions",
				Columns:    []*schema.Column{UsersPermissionColumns[1]},
				RefColumns: []*schema.Column{PermissionColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "users_permission_users_users_permissions",
				Columns:    []*schema.Column{UsersPermissionColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActionTable,
		PermissionTable,
		ResourceTable,
		UsersTable,
		UsersPermissionTable,
	}
)

func init() {
	ActionTable.Annotation = &entsql.Annotation{
		Table: "action",
	}
	PermissionTable.ForeignKeys[0].RefTable = ActionTable
	PermissionTable.ForeignKeys[1].RefTable = ResourceTable
	PermissionTable.Annotation = &entsql.Annotation{
		Table: "permission",
	}
	ResourceTable.Annotation = &entsql.Annotation{
		Table: "resource",
	}
	UsersTable.Annotation = &entsql.Annotation{
		Table: "users",
	}
	UsersPermissionTable.ForeignKeys[0].RefTable = PermissionTable
	UsersPermissionTable.ForeignKeys[1].RefTable = UsersTable
	UsersPermissionTable.Annotation = &entsql.Annotation{
		Table: "users_permission",
	}
}
